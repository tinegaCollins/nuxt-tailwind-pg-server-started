name: Deploy Remotely

on:
  push:
    branches: [main]

jobs:
  Deploy-Remotely:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 20.x to Build
        uses: actions/setup-node@v2
        with:
          node-version: "20.x"

      - run: npm ci

      - name: Build for EC2
        run: NUXT_CONFIG=nuxt.config.ec2.ts npm run build

      - name: Transfer Build Folder to EC2 Instance
        uses: easingthemes/ssh-deploy@v2.1.4
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_EC2_DEPLOY_PEM_KEY }}
          REMOTE_HOST: ${{ secrets.AWS_EC2_DEPLOY_IP_ADDRESS_HOST }}
          REMOTE_USER: ${{ secrets.AWS_EC2_DEPLOY_USER }}
          REMOTE_PORT: ${{ secrets.AWS_EC2_DEPLOY_PORT }}
          SOURCE: ".output/"
          TARGET: "/home/ubuntu/uppr/.output"

      - name: Check and install PM2 if Not Installed
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_DEPLOY_IP_ADDRESS_HOST }}
          username: ${{ secrets.AWS_EC2_DEPLOY_USER }}
          key: ${{ secrets.AWS_EC2_DEPLOY_PEM_KEY }}
          port: ${{ secrets.AWS_EC2_DEPLOY_PORT }}
          script: |
            export PATH=$PATH:/home/ubuntu/.nvm/versions/node/v20.15.0/bin
            if ! command -v pm2 $> /dev/null; 
            then
                echo "PM2 is not installed. Installing PM2..."
                npm install pm2 -g
            else
                echo "PM2 is already installed."
            fi
      - name: Restart PM2 Process
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_DEPLOY_IP_ADDRESS_HOST }}
          username: ${{ secrets.AWS_EC2_DEPLOY_USER }}
          key: ${{ secrets.AWS_EC2_DEPLOY_PEM_KEY }}
          port: ${{ secrets.AWS_EC2_DEPLOY_PORT }}
          script: |
            export PATH=$PATH:/home/ubuntu/.nvm/versions/node/v20.15.0/bin
            cd /home/ubuntu/uppr/.output
            pm2 restart nuxt-app || pm2 start server/index.mjs --name "nuxt-app"
